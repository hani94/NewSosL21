package NewLang.structure;

/*Generated by MPS */

import jetbrains.mps.lang.smodel.LanguageConceptIndex;
import jetbrains.mps.lang.smodel.LanguageConceptIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;

public final class LanguageConceptSwitch {
  private final LanguageConceptIndex myIndex;
  public static final int BinaryExpression = 0;
  public static final int DivExpression = 1;
  public static final int EmptyStatement = 2;
  public static final int ExpStatement = 3;
  public static final int Expression = 4;
  public static final int IntegerLiteral = 5;
  public static final int Istatement = 6;
  public static final int Main = 7;
  public static final int MinusExpression = 8;
  public static final int MulExpression = 9;
  public static final int PlusExpression = 10;
  public static final int Variable = 11;

  public LanguageConceptSwitch() {
    LanguageConceptIndexBuilder builder = new LanguageConceptIndexBuilder(0x82c3f21d731742c2L, 0xa9382fa615afecaaL);
    builder.put(0x2bba03e50417871dL, BinaryExpression);
    builder.put(0x2bba03e5041803c2L, DivExpression);
    builder.put(0x9729f9cf414b63dL, EmptyStatement);
    builder.put(0x2bba03e5041c9566L, ExpStatement);
    builder.put(0x2bba03e504172933L, Expression);
    builder.put(0x9729f9cf4175702L, IntegerLiteral);
    builder.put(0x9729f9cf414b638L, Istatement);
    builder.put(0x1686c41a5d838c0eL, Main);
    builder.put(0x2bba03e50417e568L, MinusExpression);
    builder.put(0x2bba03e50417f990L, MulExpression);
    builder.put(0x2bba03e50417da21L, PlusExpression);
    builder.put(0x9729f9cf414ac3aL, Variable);
    myIndex = builder.seal();
  }

  /*package*/ int index(SConceptId cid) {
    return myIndex.index(cid);
  }

  public int index(SAbstractConcept concept) {
    return myIndex.index(concept);
  }
}
